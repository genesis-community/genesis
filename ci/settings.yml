---
meta:
  name:    genesis
  release: Genesis
  target:  cloudpipes/genesis
  url:     https://cloudpipes.starkandwayne.com

  # we build our own image in this pipeline, and
  # use it, instead of standard concourse images.
  image:
    name: starkandwayne/genesis_ci

  aws:
    access_key: ((aws.access_key_id))
    secret_key: ((aws.secret_access_key))

  git:
    name:  Stark & Wayne CI Bot
    email: ci@starkandwayne.com

  github:
    owner:        genesis-community
    repo:         genesis
    branch:       v2.8.x-dev
    main-branch:  main
    private_key:  ((github.private_key))
    access_token: ((github.access_token))

  dockerhub:
    email:    ((docker.email))
    username: ((docker.username))
    password: ((docker.password))
    repository: starkandwayne/genesis

  shout:
    url:      ((shout.url))
    username: ((shout.username))
    password: ((shout.password))



# TODO: docker-image push is insecure, so we must convert to registry-image.
#       However, registry-image push doesn't build, so an additional build task
#       is needed It is recommended by concourse to use oci-build-image, but
#       another system might work better.  See
#       https://github.com/concourse/registry-image-resource#comparison-to-docker-image-resource
#       and https://github.com/concourse/oci-build-task#oci-build-task
#
groups:
- name: generate-ci-image
  jobs:
  - genesis-ci-docker-image
jobs:
- name: genesis-ci-docker-image
  plan:
  - get: dockerfile
    trigger: true
  - get: snw-concourse-image
    trigger: true
    params:
      skip_download: true
  - put: genesis-ci
    params:
      build: dockerfile/ci
      tag_as_latest: true


resources:
- name: genesis-ci
  type: registry-image
  source:
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: (( grab meta.image.name ))
- name: dockerfile
  type: git
  source:
    .: (( inject resources.git.source ))
    paths:
    - ci/Dockerfile
- name: snw-concourse-image
  type: registry-image
  source:
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: starkandwayne/concourse
    tag: latest-rc
